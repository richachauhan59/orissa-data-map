{"version":3,"sources":["data/data_mgnregs_odisha_2019-20_pc_expenditure.csv","App.js","reportWebVitals.js","index.js"],"names":["mData","d3","mainData","push","App","useState","data","setData","flag","setFlag","className","style","textAlign","MapContainer","height","border","fitBounds","zoom","center","minZoom","maxZoom","TileLayer","attribution","url","GeoJSON","fillColor","mapData","features","onEachFeature","region","layer","regionName","properties","pc_name","bindTooltip","on","e","map","item","target","setStyle","fillOpacity","colSpan","split","padding","fontSize","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"43+DAAe,MAA0B,uE,eCQnCA,EAAQ,GACdC,IAAOC,GAAU,SAAUA,GACzBF,EAAMG,KAAKD,MA2IEE,MAvIf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,oBAAS,GAFpB,mBAENG,EAFM,KAEAC,EAFA,KAwCb,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAQC,MAAO,CAAEC,UAAW,UAA1C,4FAMF,sBAAKF,UAAU,YAAf,UACE,eAACG,EAAA,EAAD,CACEH,UAAU,MACVC,MAAO,CACLG,OAAQ,OACRC,OAAQ,mBAEVC,UAAW,CACT,CAAC,UAAW,WACZ,CAAC,UAAW,YAEdC,KAAM,EACNC,OAAQ,CAAC,GAAI,IACbC,QAAS,EACTC,QAAS,EAbX,UAgBE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAEEb,MApEW,CACnBc,UAAW,aAoEHnB,KAAMoB,EAAQC,SACdC,cAlEW,SAACC,EAAQC,GAC5B,IAAMC,EAAaF,EAAOG,WAAWC,QAGrCH,EAAMI,YAAYH,GAClBD,EAAMK,GAAG,SAAS,SAAUC,GAC1BpC,EAAMqC,KACJ,SAACC,GAAD,OACEA,EAAK,gCAAkCP,GACvCO,EAAK,gCAAkCP,EAAa,SACpDO,EAAK,gCAAkCP,EAAa,QAGhDxB,EAAQ+B,GACR,QAGR7B,GAAQ,MAGVqB,EAAMK,GAAG,aAAa,SAAUC,GAC9BA,EAAEG,OAAOC,SAAS,CAChBC,YAAa,WAGjBX,EAAMK,GAAG,YAAY,SAAUC,GAC7BA,EAAEG,OAAOC,SAAS,CAChBC,YAAa,iBA2Cb,qBAAK/B,UAAU,WAAf,SACGF,EACC,8BACE,kCACA,gCACE,qBAAIkC,QAAQ,IAAZ,UACE,4DACA,mCAAMpC,EAAK,sCAGb,kCACE,+BACE,iDACA,+BAAKA,EAAK,mBAAmBqC,MAAM,gBAAO,6CAE5C,+BACE,sDACA,+BAAKrC,EAAK,wBAAwBqC,MAAM,gBAAO,6CAEjD,+BACE,4DACA,+BAAKrC,EAAK,8BAA8BqC,MAAM,gBAAO,6CAEvD,+BACE,gEACA,+BACGrC,EAAK,kCAAkCqC,MAAM,gBAAO,6CAGzD,+BACE,yDACA,+BAAKrC,EAAK,2BAA2BqC,MAAM,gBAAO,6CAEpD,+BACE,uDACA,+BAAKrC,EAAK,yBAAyBqC,MAAM,gBAAO,6CAElD,+BACE,mDACA,+BAAKrC,EAAK,qBAAqBqC,MAAM,gBAAO,qDAMpD,qBAAKhC,MAAO,CAAEC,UAAW,UAAzB,SACE,oBAAID,MAAO,CAAEiC,QAAS,OAAQC,SAAS,QAASC,UAAW,SAA3D,iEC9HCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.785af0b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/data_mgnregs_odisha_2019-20_pc_expenditure.78b1373c.csv\";","import React, { useState } from \"react\";\nimport mapData from \"./data/map.json\";\nimport { MapContainer, GeoJSON, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport * as d3 from \"d3\";\nimport mainData from \"./data/data_mgnregs_odisha_2019-20_pc_expenditure.csv\";\nimport \"./App.css\";\n\nconst mData = [];\nd3.csv(mainData, function (mainData) {\n  mData.push(mainData);\n  // console.log(mainData);\n});\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [flag, setFlag] = useState(false);\n\n  const geojsonStyle = {\n    fillColor: \"#0a443cfc\",\n  };\n\n  const onEachRegion = (region, layer) => {\n    const regionName = region.properties.pc_name;\n    // console.log();\n    // layer.bindTooltip(regionName, {permanent:true, sticky:true, className:\"tooltip\"});\n    layer.bindTooltip(regionName);\n    layer.on(\"click\", function (e) {\n      mData.map(\n        (item) =>\n          item[\"Parliamentary Constituency\"] === regionName ||\n          item[\"Parliamentary Constituency\"] === regionName + \" (ST)\" ||\n          item[\"Parliamentary Constituency\"] === regionName + \" (SC)\"\n            ? //  item.OpeningBalance\n              // console.log( item[\"Total Fund Available\"], item[\"Parliamentary Constituency\"])\n              setData(item)\n            : null\n        // console.log( \"No Match\", item[\"ParliamentaryConstituency\"])\n      );\n      setFlag(true);\n    });\n\n    layer.on(\"mouseover\", function (e) {\n      e.target.setStyle({\n        fillOpacity: \"0.9\",\n      });\n    });\n    layer.on(\"mouseout\", function (e) {\n      e.target.setStyle({\n        fillOpacity: \"0.2\",\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1 className=\"Title\" style={{ textAlign: \"center\" }}>\n          Expenditures for MGNREGS in parliamentary constituencies of Odisha\n          (2019-20)\n        </h1>\n      </div>\n      \n      <div className=\"container\">\n        <MapContainer\n          className=\"Map\"\n          style={{\n            height: \"80vh\",\n            border: \"black solid 2px\",\n          }}\n          fitBounds={[\n            [24.407138, 79.085561],\n            [16.804541, 88.889092],\n          ]}\n          zoom={7}\n          center={[20, 85]}\n          minZoom={7}\n          maxZoom={8}\n          \n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <GeoJSON\n            // pane={mapData.features.properties.pc_name}\n            style={geojsonStyle}\n            data={mapData.features}\n            onEachFeature={onEachRegion}\n          />\n        </MapContainer>\n\n        <div className=\"dataPane\">\n          {flag ? (\n            <div>\n              <table>\n              <thead>\n                <th colSpan=\"2\">\n                  <h3>Parliamentary Constituency</h3>\n                  <h1> {data[\"Parliamentary Constituency\"]}</h1>\n                  </th>\n              </thead>\n                <tbody>\n                  <tr>\n                    <td>Opening Balance</td>\n                    <td>{data[\"Opening Balance\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                  <tr>\n                    <td>Total Fund Available</td>\n                    <td>{data[\"Total Fund Available\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                  <tr>\n                    <td>Total Expenditure on Wages</td>\n                    <td>{data[\"Total Expenditure on Wages\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                  <tr>\n                    <td>Total Expenditure on Materials</td>\n                    <td>\n                      {data[\"Total Expenditure on Materials\"].split(\"â¹\")}<span> Rs</span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Grand Total Expenditure</td>\n                    <td>{data[\"Grand Total Expenditure\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                  <tr>\n                    <td>Total Unspent Balance</td>\n                    <td>{data[\"Total Unspent Balance\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                  <tr>\n                    <td>Total Payment Due</td>\n                    <td>{data[\"Total Payment Due\"].split(\"â¹\")}<span> Rs</span></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              <h4 style={{ padding: '20px', fontSize:' 20px', marginTop: \"100px\"}}>\n                Click on any Region to check the details\n              </h4>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}